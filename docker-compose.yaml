services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: relay-tailscale
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_TAILSCALED_EXTRA_ARGS=--tun=tailscale1
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - tailscale-state:/var/lib/tailscale
    restart: unless-stopped
    ports:
      - 8080:8080 # relay-server
      - 9091:9091 # minio console

  minio:
    container_name: minio
    network_mode: 'service:tailscale'
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - ./data:/data
    restart: unless-stopped
    command: server /data --console-address ":9001"
    image: quay.io/minio/minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  relay-server:
    image: docker.system3.md/relay-server:latest
    container_name: relay-server
    network_mode: 'service:tailscale'
    ports:
      - "8080:8080"
    environment:
      - AWS_S3_USE_PATH_STYLE=true
      - AWS_ENDPOINT_URL_S3=http://localhost:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - RELAY_SEVER_AUTH=${RELAY_SERVER_AUTH}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  tailscale-state:
