#
# Docker Compose with Caddy reverse proxy for HTTPS
#
# This setup provides:
# - Automatic HTTPS certificates via Let's Encrypt
# - Professional domain setup (your-domain.com)
# - Works with any external S3-compatible storage
#
# Required environment variables:
# DOMAIN - Your domain name (e.g., relay.yourdomain.com)
# RELAY_SERVER_AUTH - Auth token from Relay team
# Storage credentials (AWS_ACCESS_KEY_ID, etc.)
#

services:
  caddy:
    image: caddy:alpine
    container_name: relay-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN:?Domain is required}
    depends_on:
      - relay-server
    restart: unless-stopped

  relay-server:
    image: docker.system3.md/relay-server:latest
    container_name: relay-server
    # No ports exposed - only accessible via Caddy
    environment:
      # Storage configuration (use your preferred provider)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - AWS_REGION=${AWS_REGION:-auto}
      - AWS_ENDPOINT_URL_S3=${AWS_ENDPOINT_URL_S3}
      - AWS_S3_USE_PATH_STYLE=${AWS_S3_USE_PATH_STYLE:-false}
      
      # Relay server configuration
      - RELAY_SERVER_AUTH=${RELAY_SERVER_AUTH:?}
      - RELAY_SERVER_STORAGE=${RELAY_SERVER_STORAGE:?}
      - RELAY_SERVER_URL_PREFIX=https://${DOMAIN}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config: